//=============================================================================
//
// パーティクル処理 [particle.h]
// Author : KADO TAKUMA
//
//=============================================================================
#ifndef _PARTICLE_H_
#define _PARTICLE_H_

//=============================================================================
// インクルードファイル
//=============================================================================
#include "main.h"
#include <time.h>

//=============================================================================
// マクロ定義
//=============================================================================
#define MAX_PARTICLE	(10000)			//パーティクルの最大数

//=============================================================================
// 構造体
//=============================================================================
typedef struct
{
	D3DXVECTOR3 pos;			//位置
	D3DXVECTOR3 move;			//移動量
	D3DXVECTOR3 rot;			//角度
	D3DXCOLOR col;				//頂点カラー
	float fRadius;				//半径
	float fRot;					//発射角度
	float fAngle;				//角度
	float fLength;				//移動量
	float fSubtractionα;		//α値減算量
	float fSubtractionRadius;	//半径減算量
	int nLife;					//寿命
	int nMaxLife;				//最大寿命
	int nTipe;					//タイプ
	bool bUse;					//使用しているかどうか
}Particle;

//=============================================================================
// プロトタイプ宣言
//=============================================================================
void InitParticle(void);
void UninitParticle(void);
void UpdateParticle(void);
void DrawParticle(void);
void SetParticle(D3DXVECTOR3 pos , int nTipe);
Particle *GetParticle(void);


#endif